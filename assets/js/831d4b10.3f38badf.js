"use strict";(self.webpackChunkknowledge=self.webpackChunkknowledge||[]).push([[711],{9613:(e,t,r)=>{r.d(t,{Zo:()=>s,kt:()=>g});var n=r(9496);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=n.createContext({}),u=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},s=function(e){var t=u(e.components);return n.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),f=u(r),g=a,d=f["".concat(p,".").concat(g)]||f[g]||c[g]||i;return r?n.createElement(d,o(o({ref:t},s),{},{components:r})):n.createElement(d,o({ref:t},s))}));function g(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=f;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var u=2;u<i;u++)o[u]=r[u];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},3960:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>c,frontMatter:()=>i,metadata:()=>l,toc:()=>u});var n=r(2962),a=(r(9496),r(9613));const i={},o="ripgrep",l={unversionedId:"useful-software/ripgrep",id:"useful-software/ripgrep",title:"ripgrep",description:"ripgrep (rg) is like grep but faster and cooler (it's written in \ud83d\ude80 Rust \ud83d\ude80).",source:"@site/docs/useful-software/ripgrep.md",sourceDirName:"useful-software",slug:"/useful-software/ripgrep",permalink:"/useful-software/ripgrep",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"autogeneratedSidebar",previous:{title:"mosh",permalink:"/useful-software/mosh"},next:{title:"\ud83d\ude80 Rust \ud83d\ude80",permalink:"/useful-software/rust"}},p={},u=[{value:"Installation",id:"installation",level:2},{value:"Arch",id:"arch",level:3},{value:"Debian",id:"debian",level:3},{value:"Rust",id:"rust",level:3},{value:"Rust (from source)",id:"rust-from-source",level:4},{value:"Paging",id:"paging",level:2}],s={toc:u};function c(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"ripgrep"},"ripgrep"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/BurntSushi/ripgrep"},"ripgrep (rg)")," is like grep but faster and cooler (it's written in \ud83d\ude80 Rust \ud83d\ude80)."),(0,a.kt)("h2",{id:"installation"},"Installation"),(0,a.kt)("h3",{id:"arch"},"Arch"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"pacman -S ripgrep\n")),(0,a.kt)("h3",{id:"debian"},"Debian"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"curl -Lo /tmp/rg.deb https://github.com/BurntSushi/ripgrep/releases/download/13.0.0/ripgrep_13.0.0_amd64.deb\ndpkg -i /tmp/rg.deb\n")),(0,a.kt)("h3",{id:"rust"},"Rust"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"cargo install ripgrep\n")),(0,a.kt)("h4",{id:"rust-from-source"},"Rust (from source)"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"RUSTFLAGS=\"-C target-cpu=native\" cargo install --git=https://github.com/BurntSushi/ripgrep#master --features='simd-accel'\n")),(0,a.kt)("h2",{id:"paging"},"Paging"),(0,a.kt)("p",null,"This function allows nicer pagination for long output."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'export RG_PATH="${RG_PATH:-$(which rg)}"\nfunction rg() {\n    if [[ -t 1 ]]; then\n        $RG_PATH -p "$@" | less --RAW-CONTROL-CHARS --quit-if-one-screen --no-init\n    else\n        $RG_PATH "$@"\n    fi\n}\n')),(0,a.kt)("p",null,"If you don't want it, you can clear it with ",(0,a.kt)("inlineCode",{parentName:"p"},"unset -f rg")," or just call ",(0,a.kt)("inlineCode",{parentName:"p"},"$RG_PATH [command]")))}c.isMDXComponent=!0}}]);