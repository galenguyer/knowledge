"use strict";(self.webpackChunkknowledge=self.webpackChunkknowledge||[]).push([[284],{9613:(e,r,t)=>{t.d(r,{Zo:()=>p,kt:()=>m});var n=t(9496);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function l(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c=n.createContext({}),s=function(e){var r=n.useContext(c),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},p=function(e){var r=s(e.components);return n.createElement(c.Provider,{value:r},e.children)},d={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},u=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=s(t),m=a,k=u["".concat(c,".").concat(m)]||u[m]||d[m]||o;return t?n.createElement(k,i(i({ref:r},p),{},{components:t})):n.createElement(k,i({ref:r},p))}));function m(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=u;var l={};for(var c in r)hasOwnProperty.call(r,c)&&(l[c]=r[c]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var s=2;s<o;s++)i[s]=t[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}u.displayName="MDXCreateElement"},9143:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var n=t(2962),a=(t(9496),t(9613));const o={},i="Trunk-Recorder",l={unversionedId:"radio/trunk-recorder",id:"radio/trunk-recorder",title:"Trunk-Recorder",description:"trunk-recorder can listen to P25 Phase I and II trunks, as well as conventional frequency scanning. It can stream the audio it receives over UDP or TCP, or upload it to streaming sites like broadcastify.com.",source:"@site/docs/radio/trunk-recorder.md",sourceDirName:"radio",slug:"/radio/trunk-recorder",permalink:"/radio/trunk-recorder",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"autogeneratedSidebar",previous:{title:"ntp",permalink:"/radio/ntp"},next:{title:"Long-Time Nuclear Waste Warning",permalink:"/shitposts/nuclear-waste-warning"}},c={},s=[{value:"Debian 11 Installation",id:"debian-11-installation",level:2}],p={toc:s};function d(e){let{components:r,...t}=e;return(0,a.kt)("wrapper",(0,n.Z)({},p,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"trunk-recorder"},"Trunk-Recorder"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/robotastic/trunk-recorder/"},"trunk-recorder")," can listen to P25 Phase I and II trunks, as well as conventional frequency scanning. It can stream the audio it receives over UDP or TCP",", or upload it to streaming sites like ",(0,a.kt)("a",{parentName:"p",href:"https://broadcastify.com/calls/"},"broadcastify.com"),"."),(0,a.kt)("h2",{id:"debian-11-installation"},"Debian 11 Installation"),(0,a.kt)("p",null,"These instructions should work for installing trunk-recorder on a clean Debian 11 installation."),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Enable the ",(0,a.kt)("inlineCode",{parentName:"li"},"non-free")," repositories in ",(0,a.kt)("inlineCode",{parentName:"li"},"/etc/apt/sources.list"),". This is needed for ",(0,a.kt)("inlineCode",{parentName:"li"},"libfdk-aac2"),", a dependency of ",(0,a.kt)("inlineCode",{parentName:"li"},"fdkaac")),(0,a.kt)("li",{parentName:"ol"},"Install prerequisites:",(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"apt install -y apt-transport-https build-essential ca-certificates cmake fdkaac git gnupg gnuradio gnuradio-dev gr-osmosdr libboost-all-dev libcurl4-openssl-dev libgmp-dev libhackrf-dev liborc-0.4-dev libpthread-stubs0-dev libsndfile1-dev libssl-dev libuhd3.15.0 libuhd-dev libusb-dev pkg-config software-properties-common sox\n"))),(0,a.kt)("li",{parentName:"ol"},"Clone the repository:",(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"git clone https://github.com/robotastic/trunk-recorder\ncd trunk-recorder\n"))),(0,a.kt)("li",{parentName:"ol"},"Use CMake to generate build files. It's recommended you do this in a separate directory",(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'cd cmake_build && cd "$_"\ncmake ..\n'))),(0,a.kt)("li",{parentName:"ol"},"Build and install trunk-recorder",(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"make -j$(nproc) install\n")))))}d.isMDXComponent=!0}}]);